---  
layout: post  
title: "[리뷰] 파이썬을 활용한 금융공학 레시피"  
subtitle: "문과생의 코딩 울렁증과 이과생의 금융 울렁증을 한 방에 씻어줄 금융공학 사이다"  
categories: review  
tags: review book 금융공학 Python 주식 지수 선물 옵션 구조화상품 Pandas Numpy 시각화 모델링   
comments: true  
header-img: img/review/2020-11-19-review-book-financial-engineering-recipe-1.png
---  
  
> `한빛미디어` 출판사의 `"파이썬을 활용한 금융공학 레시피(김용환 저)"`를 읽고 작성한 리뷰입니다.  

![표지](https://theorydb.github.io/assets/img/review/2020-11-19-review-book-financial-engineering-recipe-1.png)  

---

본 도서의 내용은 부제가 가장 잘 표현하고 있는 듯 하다.

> 문과생의 `코딩 울렁증`과 이과생의 `금융 울렁증`을 한 방에 씻어줄 금융공학 사이다

즉, 본 도서는 2가지 목적을 가지고 있다. 
* 금융 관련 업무 종사자가 Python 코딩과 같은 IT 스킬을 얻고 싶은 경우
* IT 업계 종사자가 금융 공학의 입문 지식을 탄탄히 다지고 싶은 경우 

물론 가장 적합한 독자는 두 영역 모두 잘 모르지만 양쪽 다 관심이 있는 독자이다. 

두마리의 토끼를 잡을 수 있다는 점은 본 도서의 가장 큰 장점이자 단점인 듯 하다. 한 권의 책으로 두마리의 토끼를 완벽하게 잡는 것은 어려운 일이므로 어느 한 쪽을 심도있게 학습하고 싶은 사람에게는 특정 분야의 깊이가 부족해 보일 수도 있겠다.

나는 IT 업계 종사자로써 금융 공학의 지식이 부족한 유형으로 위 유형 중 후자에 해당하는 독자이다. 따라서 본 리뷰는 후자 유형과 유사한 독자분들께 보다 도움이 될 것 같다.

금융공학의 전반을 잘 아는 것은 아니지만 퀀트, 투자 금융 등 금융 공학 분야도 굉장히 세분화 되어있는 것으로 알고 있다. 본 도서는 모든 금융 공학 분야를 다루진 않는 듯 하다. 저자가 근무하고 있는 `한국거래소`에서 주로 활용하는 금융 공학 혹은 `금융 상품 개발`과 관련된 공학에 초점이 맞춰져 있다. 

즉, 선물, 옵션, 구조화 상품과 관련된 지식 및 이에 필요한 모델링을 다룬다. 선물은 이미 투자자로써 어느 정도 알고있는 지식이었지만 옵션이나 구조화 상품은 지식이 전무했다. 특히, 옵션은 예전에 누군가의 설명을 읽고도 쉽게 이해가지 않아 투자를 포기한 적이 있으며, 구조화 상품은 내부의 복잡한 매커니즘에 대한 이해는 커녕 단순한 주식 같은 펀드라고만 생각해 왔다.

개인적으로 본 도서를 읽으며 가장 만족스러웠던 점은 2가지를 꼽을 수 있는데 그 중 하나가 바로 `선물, 옵션, 구조화 상품과 같은 상품이 어떻게 만들어지는지` 내부적으로 `어떤 모델링 기법을` 사용하고 `수학적 공식`을 활용하는지 상세히 알 수 있었다는 점이다. 설명 또한 적절하고 쉬운 예시를 비유로 들고 있어 이해하는데 큰 어려움이 없어 만족스러웠다.
![콜옵션](https://theorydb.github.io/assets/img/review/2020-11-19-review-book-financial-engineering-recipe-2.png)  

내용 전개 방식 또한 쉬운 예시를 통한 개념 이해를 시작으로, 엑셀로 구현하는 과정 속에서 자칫 프로그래밍 코딩 자체에 집중이 팔려 `업무 도메인지식을 놓치지 않도록 배려`한 부분이 마음에 들었다. 엑셀로 필요 수식이나 모델링을 구현하고 나면 실제로 해당 상품의 구조에 대한 이해가 쉬워진다. 이와 동일한 작업을 Python 코딩을 통해 마무리함으로써 금융 공학 지식을 한 번 더 복습 할 수 있는 구조이기에 금융에서 활용되는 프로그램이 어떤 식으로 구현되는지 감을 잡을 수 있어 좋았다. 마지막으로 모델링으로 총정리를 하고 나면 한국거래소에서 돌아가는 업무나 그 외 금융 상품이 만들어지는 방식에 대해 쉽게 이해할 수 있다.

두번째로 만족스러웠던 점은 `블랙-숄즈 방정식`을 다룬점이다. 금융 공학에 대한 깊이는 부족하지만 퀀트에 관심이 많아 예전에 금융 전공자들이 데이터 분석을 목적으로 참고하는 서적을 지인에게 빌려 읽은 적이 있는데 수식이나 그릭스 표기 때문에 직관적으로 이해되지 않아 어려움을 겪었었다.
![블랙-숄즈](https://theorydb.github.io/assets/img/review/2020-11-19-review-book-financial-engineering-recipe-3.png)  

블랙-숄즈 방정식에 대한 설명과 이를 코딩으로 구현함으로써 내부에 숨겨진 의미를 명쾌하게 파악할 수 있었다는 점에서 매우 만족스러웠다. 금융 공학에서 숫자와 금융을 어떤 관점에서 바라보는지 감을 잡을 수 있었다고 해야할까? `금융 관련 전공자들의 다각적인 시각`이 다른 데이터 분석을 할때에도 좋은 인사이트를 제공한다는 느낌을 받을 수 있었다. 

비록 책에서 다루고 있지는 않지만 이항 모형, 몬테카를로 시뮬레이션, 유한차분법의 위치가 어느 포지션에 해당하는지도 이해할 수 있어 금융 공학으로 깊이 있게 넘어갈 수 있는 `가교 역할`의 기능을 갖춘 듯 하다. 적어도 금융 공학 지식이 부족한 개발자에게는 많은 도움이 될 수 있는 서적이다. 

반면 부족한 점도 있다. IT 업계 종사자라면 기술 측면으로는 약간 지식이 부족하다. 일단 머신러닝이나 딥러닝의 모델을 적용한 예제가 없으며 좋은 데이터 사이언티스트들이 연구한 수학 공식을 코드로 표현한 느낌이 든다. 연역법의 충실한 표현은 있지만 귀납적인 형태의 모델링이 부족하다는 뜻이다. 또, 개인적으로는 블랙-숄즈 방정식이 도출되는 과정이 없어 조금은 아쉬웠다. 하지만 구현하는 과정을 통해 대리 만족할 수 있어 큰 불만은 없다.

더불어 Python 고급 스킬은 많이 다루고 있지 않다. 하지만 금융 공학에서 활용하는 코딩 스타일을 배울 수 있다는 점은 장점이며, 선물 파트 부분에서 Pandas나 Numpy를 알기쉽게 정리할 수 있다는 점과 옵션 파트에서 최단 시간 내 효율적으로 사용할 수 있는 시각화 방법을 다룬 점은 크게 칭찬할 만한 부분이라 생각한다. 

비록 내게는 해당되지는 않지만 IT 실력이 부족한 금융 업계 종사자 기준에서는 Python과 친숙해지기에 이만한 책이 없다고 본다. 엑셀로 구현한 부분과 Python으로 구현한 부분을 비교할 수 있기에 프로그래밍에서 커버할 수 있는 스킬이 어떤 것인지 그 `미묘한 감`을 익히는 데 큰 도움이 될 것 같다는 생각이 든다. 더욱이 부록에 Python의 기초를 다루고 있기에 프로그래밍 경험이 전무해도 본 도서 하나만 있으면 프로그래밍 세계에 입문하기에 큰 어려움이 없을 것 같다.

---

* [책소개 - 파이썬을 활용한 금융공학 레시피](http://www.yes24.com/Product/Goods/61177004?OzSrank=1)

